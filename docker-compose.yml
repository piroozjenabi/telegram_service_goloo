version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: telegram-bot-service
    ports:
      - "7004:8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=MAIN.settings
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"

  db:
    image: postgres:16-alpine
    container_name: telegram-bot-db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=telegram_bots
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  test:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: telegram-bot-test
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=MAIN.settings
      - DJANGO_DEBUG=1
    depends_on:
      - db
    command: >
      sh -c "python manage.py migrate &&
             python manage.py test --verbosity=2"
    profiles:
      - test

volumes:
  postgres_data:
  static_volume:
  media_volume:
